# EDO docker compose file
# Copyright (C) 2017 Project-EBDO

# author: Alexandre Degurse

version: '3.1'
services:

  feature_engine:
    build: feature_engine
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    container_name: elasticsearch
    # volumes:
    #   - ./es/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    networks:
      - middleware
      - es_net

  ## Example of a second intance of ES whose master is the ES above
  # elasticsearch2:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
  #   container_name: elasticsearch2
  #   # volumes:
  #   #   - ./es/config/elasticsearch_slaves.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #   environment:
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - "discovery.zen.ping.unicast.hosts=elasticsearch"
  #   networks:
  #     - es_net

  kibana:
    image: "docker.elastic.co/kibana/kibana:6.2.2"
    container_name: kibana
    # volumes:
    #   - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - middleware

  feature_service:
    ## Node version is static to avoid regular updates
    build: "feature_service"
    container_name: feature_service
    user: "node"
    working_dir: /home/node/FeatureService
    environment:
      - NODE_ENV=production
    ## feature_service is port is published for dev purposes
    ports:
      - "7231:7231"
    command: npm start
    networks:
      - middleware

  nginx:
    image: nginx:1.13.9
    container_name: nginx
    ## As of now, there is no repository for frontend.
    volumes:
      - ./nginx/config:/etc/nginx:ro
      - ./nginx/static:/var/www/edo/static:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - middleware
      - frontend

networks:
  frontend:
  middleware:
  es_net:
  backend:
